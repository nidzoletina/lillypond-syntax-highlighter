{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "lillypond",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#sections"
    },
    {
      "include": "#expressions"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#variable"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#invalid"
    }
  ],
  "repository": {
    "invalid": {
      "name": "invalid",
      "match": "."
    },
    "noteNames": {
      "name": "support.constant.math",
      "match": "(?x)\n  \\x20\n  (a|b|c|d|e|f|g)(is|es|isis\\eses)?\n  (,{1,5}|'{1,5})?\n  (128|1|2|4|8|16|32|64)?\n  \\.?\n",
      "clef": {
        "name": "keyword",
        "match": "(?x)\n  \\clef\n"
      }
    },
    "keySignature": {
      "name": "keyword.operator.expression",
      "match": "(?x)\n  \\\\key\n  \\x20(a|b|c|d|e|f|g)(is|es|isis\\eses)?\n  \\x20\\\\(major|minor)\n"
    },
    "expressions": {
      "name": "keyword.operator.expressions",
      "patterns": [
        {
          "include": "#expressionsWithNew"
        }
      ]
    },
    "expressionsWithNew": {
      "name": "keyword.operator.expression",
      "match": "\\\\new (Staff|TabStaff)"
    },
    "variable": {
      "name": "variable",
      "match": "\\\\?\\b[a-zA-Z]+\\b"
    },
    "entity": {
      "patterns": [
        {
          "name": "property",
          "begin": "{",
          "end": "}"
        }
      ]
    },
    "keywords": {
      "name": "keyword.control.lillypond",
      "match": "(?x)\n  \\\\key\n  |\\\\new\n  |\\\\set\n"
    },
    "sections": {
      "patterns": [
        {
          "name": "keyword.control.lillypond",
          "begin": "\\\\relative ?{",
          "end": "}",
          "patterns": [
            {
              "name": "keyword.control.lillypond",
              "match": "\\\\bar"
            },
            {
              "include": "#keySignature"
            },
            {
              "include": "#noteNames"
            },
            {
              "include": "#keywords"
            },
            {
              "include": "#comment"
            },
            {
              "name": "support.constant.barCheck",
              "match": "\\|"
            },
            {
              "name": "string.quoted.double.lillypond",
              "begin": "\"",
              "end": "\""
            },
            {
              "include": "#invalid"
            }
          ]
        },
        {
          "name": "keyword.control.lillypond",
          "begin": "\\\\header ?{",
          "end": "}",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "name": "variable",
              "match": "\\b(title|subtitle)\\b ="
            },
            {
              "name": "string.quoted.double.lillypond",
              "begin": "\"",
              "end": "\""
            }
          ]
        },
        {
          "name": "keyword.control.lillypond",
          "match": "\\\\(version)"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.lillypond",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.lillypond",
          "match": "\\\\."
        }
      ]
    },
    "comment": {
      "patterns": [
        {
          "name": "comment.block",
          "begin": "%{",
          "end": "%}"
        },
        {
          "name": "comment.line",
          "match": "%.+"
        }
      ]
    }
  },
  "scopeName": "source.lillypond"
}