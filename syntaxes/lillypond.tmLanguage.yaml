---
  $schema: https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json
  name: lillypond
  patterns:
    - include: "#comment"
    - include: "#sections"
    - include: "#expressions"
    - include: "#keywords"
    - include: "#variable"
    - include: "#strings"
    - include: "#invalid"

  repository:
    invalid: 
      name: invalid
      match: .

    # strings:
    #   name: strings
    #   match:

    noteNames:    
      name: support.constant.math
      match: >
        (?x)
          \x20
          (a|b|c|d|e|f|g)(is|es|isis\eses)?
          (,{1,5}|'{1,5})?
          (128|1|2|4|8|16|32|64)?
          \.?

      clef:
        name: keyword
        match: >
          (?x)
            \clef

    keySignature:
      name: keyword.operator.expression
      match: >
        (?x)
          \\key
          \x20(a|b|c|d|e|f|g)(is|es|isis\eses)?
          \x20\\(major|minor)

    expressions:
      name: keyword.operator.expressions
      patterns:
        - include: "#expressionsWithNew"

    expressionsWithNew:
      name: keyword.operator.expression
      match: \\new (Staff|TabStaff)

    variable:
      name: variable
      match: \\?\b[a-zA-Z]+\b

    entity:
      patterns:
        - name: property
          begin: "{"
          end: "}"

    keywords:
      name: keyword.control.lillypond
      match: >
        (?x)
          \\key
          |\\new
          |\\set

    sections:
      patterns:
        - name: keyword.control.lillypond
          begin: \\relative ?{
          end: "}"
          patterns:
            - name: keyword.control.lillypond
              match: \\bar

            - include: "#keySignature"
            - include: "#noteNames"
            - include: "#keywords"
            - include: "#comment"

            - name: support.constant.barCheck
              match: "\\|"

            - name: string.quoted.double.lillypond
              begin: '"'
              end: '"'

            - include: "#invalid"
        
        - name: keyword.control.lillypond
          begin: \\header ?{
          end: "}"
          patterns:
            - include: "#comment"

            - name: variable
              match: "\\b(title|subtitle)\\b ="

            - name: string.quoted.double.lillypond
              begin: '"'
              end: '"'

        - name: keyword.control.lillypond
          match: \\(version)

    strings:
      name: string.quoted.double.lillypond
      begin: '"'
      end: '"'
      patterns:
        - name: constant.character.escape.lillypond
          match: \\.

    comment:
      patterns:
        - name: comment.block
          begin: "%{"
          end: "%}"
        - name: comment.line
          match: "%.+"



  scopeName: source.lillypond